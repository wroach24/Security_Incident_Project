// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace NIST_Calibration_Sheet.Models
{
    public partial class GasCheckTDLSContext : DbContext
    {
        public GasCheckTDLSContext()
        {
        }

        public GasCheckTDLSContext(DbContextOptions<GasCheckTDLSContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AmbientResult> AmbientResult { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AmbientResult>(entity =>
            {
                entity.HasKey(e => e.LaserSerialNo);

                entity.Property(e => e.LaserSerialNo)
                    .HasMaxLength(10)
                    .HasColumnName("Laser_Serial_No")
                    .IsFixedLength();

                entity.Property(e => e.LaserType)
                    .HasMaxLength(50)
                    .HasColumnName("Laser_Type");

                entity.Property(e => e.Mid2Actual).HasColumnName("Mid2_Actual");

                entity.Property(e => e.Mid2Average).HasColumnName("Mid2_Average");

                entity.Property(e => e.Mid2Maximum).HasColumnName("Mid2_Maximum");

                entity.Property(e => e.Mid2Minimum).HasColumnName("Mid2_Minimum");

                entity.Property(e => e.MidActual).HasColumnName("Mid_Actual");

                entity.Property(e => e.MidAverage).HasColumnName("Mid_Average");

                entity.Property(e => e.MidMaximum).HasColumnName("Mid_Maximum");

                entity.Property(e => e.MidMinimum).HasColumnName("Mid_Minimum");

                entity.Property(e => e.Result).HasMaxLength(50);

                entity.Property(e => e.SecondGas).HasColumnName("Second_Gas");

                entity.Property(e => e.Span2Actual).HasColumnName("Span2_Actual");

                entity.Property(e => e.Span2Average).HasColumnName("Span2_Average");

                entity.Property(e => e.Span2Maximum).HasColumnName("Span2_Maximum");

                entity.Property(e => e.Span2Minimum).HasColumnName("Span2_Minimum");

                entity.Property(e => e.SpanActual).HasColumnName("Span_Actual");

                entity.Property(e => e.SpanAverage).HasColumnName("Span_Average");

                entity.Property(e => e.SpanMaximum).HasColumnName("Span_Maximum");

                entity.Property(e => e.SpanMinimum).HasColumnName("Span_Minimum");

                entity.Property(e => e.TestDate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("Test_Date");

                entity.Property(e => e.ZeroActual).HasColumnName("Zero_Actual");

                entity.Property(e => e.ZeroAverage).HasColumnName("Zero_Average");

                entity.Property(e => e.ZeroMaximum).HasColumnName("Zero_Maximum");

                entity.Property(e => e.ZeroMinimum).HasColumnName("Zero_Minimum");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}